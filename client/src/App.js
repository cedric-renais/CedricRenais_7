//--------------------------------------//
// Importing the necessary dependencies //
//--------------------------------------//
import './App.css';
import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';
import Login from './pages/Login';
import NewPost from './pages/NewPost';
import Post from './pages/Post';
import Posts from './pages/Posts';
import Register from './pages/Register';
import Logo from './images/icon-left-font-monochrome-white.png';
import { AuthContext } from './helpers/authContext';
import { useState, useEffect } from 'react';
import axios from 'axios';
//-----------------------------------------------------------//
// An empty App function is automatically generated by REACT //
//-----------------------------------------------------------//
function App() {
  //----------------------------------------------------------------------------------//
  // Change the appearance of links depending on whether the user is logged in or not //
  //----------------------------------------------------------------------------------//
  const [authState, setAuthState] = useState();
  useEffect(() => {
    axios
      .get('http://localhost:3001/users/auth', {
        headers: { JWToken: sessionStorage.getItem('JWToken') },
      })
      .then((response) => {
        if (response.data.error) {
          setAuthState(false);
        } else {
          setAuthState(true);
        }
      });
  }, []);
  //--//
  //
  //--//
  const logout = () => {
    sessionStorage.removeItem('JWToken');
    setAuthState(false);
    window.location.replace(`http://localhost:3000/`);
  };
  //---------------------------//
  // Return the HTML to inject //
  //---------------------------//
  return (
    <div className="App">
      <AuthContext.Provider value={{ authState, setAuthState }}>
        <Router>
          <div className="navbar">
            <img className="logo" src={Logo} alt="Logo" />
            {authState && (
              <>
                <Link to="/newpost">Créer un message</Link>
                <Link to="/posts">Voir les messages</Link>
              </>
            )}
            {!authState ? (
              <>
                <Link to="/">Se connecter</Link>
                <Link to="/register">Créer un compte</Link>
              </>
            ) : (
              <button onClick={logout}>Se déconnecter</button>
            )}
          </div>
          <Routes>
            <Route path="/" exact element={<Login />} />
            <Route path="/register" exact element={<Register />} />
            <Route path="/posts" exact element={<Posts />} />
            <Route path="/post/:id" exact element={<Post />} />
            <Route path="/newpost" exact element={<NewPost />} />
          </Routes>
        </Router>
      </AuthContext.Provider>
    </div>
  );
}
//-------------------------//
// export the App function //
//-------------------------//
export default App;
